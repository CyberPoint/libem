CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
PROJECT(GAUSSMIX)

ENABLE_LANGUAGE(C)
ENABLE_LANGUAGE(CXX)
ENABLE_LANGUAGE(Fortran)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0 -gdwarf-2 -DDEBUG")
SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O2")

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -gdwarf-2 -DDEBUG")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2")

IF(USEMPI)
FIND_PACKAGE(MPI)
IF(MPI_CXX_FOUND)
	SET(CMAKE_C_COMPILER ${MPI_COMPILER})
	SET(CMAKE_CXX_COMPILER ${MPI_CXX_COMPILER})
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUseMPI ${MPI_CXX_COMPILE_FLAGS}")
	INCLUDE_DIRECTORIES(${MPI_CXX_INCLUDE_PATH})
ENDIF(MPI_CXX_FOUND)
ELSE(NOT USEMPI)
FIND_PACKAGE(OpenMP)
IF(OPENMP_FOUND)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
ENDIF(OPENMP_FOUND)
ENDIF(USEMPI)

#FILE(COPY ${CMAKE_SOURCE_DIR}/cmake/findopencl/FindOpenCL.cmake DESTINATION ${CMAKE_SOURCE_DIR}/cmake/Modules/)
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/cmake/findopencl/FindOpenCL.cmake" "${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindOpenCL.cmake" COPYONLY)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")
FIND_PACKAGE(OpenCL)
IF(OPENCL_FOUND)
	INCLUDE_DIRECTORIES(${OPENCL_INCLUDE_DIRS})
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DOPENCL")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DOPENCL")
ENDIF()

FIND_PACKAGE(BLAS REQUIRED)
IF(BLAS_FOUND)
	INCLUDE_DIRECTORIES(${BLAS_INCLUDE_DIR})
ENDIF()

FIND_PACKAGE(LAPACK REQUIRED)
IF(LAPACK_FOUND)
	INCLUDE_DIRECTORIES(${LAPACK_INCLUDE_DIR})
ENDIF()

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
SET(LIBGAUSSMIX_SRC_FILES Adapt.cpp GaussMix.cpp KMeans.cpp Matrix.cpp)

ADD_LIBRARY(gaussmixShared SHARED ${LIBGAUSSMIX_SRC_FILES})
SET_TARGET_PROPERTIES(gaussmixShared PROPERTIES OUTPUT_NAME gaussmix)
ADD_LIBRARY(gaussmixStatic STATIC ${LIBGAUSSMIX_SRC_FILES})
SET_TARGET_PROPERTIES(gaussmixStatic PROPERTIES OUTPUT_NAME gaussmix)

ADD_EXECUTABLE(gaussmix_ex sample_main.cpp)
ADD_DEPENDENCIES(gaussmix_ex gaussmixStatic)
SET_TARGET_PROPERTIES(gaussmix_ex PROPERTIES OUTPUT_NAME gaussmix)
IF(OPENCL_FOUND)
	TARGET_LINK_LIBRARIES(gaussmix_ex gaussmixStatic lapacke lapack blas ${OPENCL_LIBRARIES})
ELSE(NOT OPENCL_FOUND)
	TARGET_LINK_LIBRARIES(gaussmix_ex gaussmixStatic lapacke lapack blas)
ENDIF(OPENCL_FOUND)

